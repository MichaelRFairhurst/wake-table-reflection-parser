every WakeType is:

	with public Num type = 0;
	with public Num arrayed = 0;
	with public Num optional = 0;
	with public Text classname = "";
	with public Text specialty = "";
	with public WakeType[] parameters = [];
	with public WakeType? returntype = nothing;
	with public WakeType[] arguments = [];
	with public WakeType? upperbound = nothing;
	with public WakeType? lowerbound = nothing;

	Text -- getDeclarableName() {
		return "Blah";
	}

	Text -- getPureName() {
		var Text = classname;

		if(parameters.getSize() > 0) {
			var Bool first = true;

			Text += '{';
			var WakeType[] = parameters;
			foreach(WakeType[]) { // @TODO foreach on alias
				if(!first) Text += ',';
				first = false;
				Text += WakeType.getPureName();
			}
			Text += '}';
		}

		var Num = arrayed;
		while(Num > 0) {
			Text += "[]";
			Num -= 1;
		}

		if(optional != 0) Text += "?";

		return Text;
	}

	Text[] -- getNeededImports() {
		var Text[] = [];
		if(classname != "Num" && classname != "Bool" && classname != "List" && classname != "Text")
			Text[].push(classname);

		if(parameters.getSize() != 0) {
			var WakeType[] = parameters;
			foreach(WakeType[]) { // @TODO foreach on alias
				var $Text[] = WakeType.getNeededImports();
				foreach($Text[]) {
					if($Text == "Num" || $Text == "Bool" || $Text == "List" || $Text == "Text")
						continue;
					if(Text[].contains($Text))
						continue;

					Text[].push($Text);
				}
			}
		}

		return Text[];
	}
