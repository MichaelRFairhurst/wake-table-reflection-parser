import WakeType;
import WakeProperty;
import Map;
import ImportFilterer;
import WakeClass;
import WakeListType;
import WakeOptionalType;
import WakeParameterizedType;
import WakeLambdaType;
import WakeClassType;
import Annotation;
import AnnotationVal;
import UnusableTableFileVersionException;

every ReflectionProvider is:

	provides WakeType, WakeClass, Map{Text, WakeProperty}, WakeProperty, ImportFilterer, Exception,
		WakeClassType,
		WakeOptionalType,// <- WakeOptionalType(WakeType:contained),
		WakeListType,// <- WakeListType(WakeType:contained),
		WakeParameterizedType,
		WakeLambdaType,
		Annotation <- Annotation(?Text),
		AnnotationVal,
		WakeType:contained <- {
			var WakeType? = contained;
			if WakeType exists {
				return WakeType;
			} else {
				throw Exception from this;
			}
		},
		UnusableTableFileVersionException <- UnusableTableFileVersionException(?Num, ?Num);

	with public WakeType? contained = nothing;
